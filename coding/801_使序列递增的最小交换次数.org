* 题目
#+DOWNLOADED: file:/var/folders/73/53s3wczx1l32608prn_fdgrm0000gn/T/TemporaryItems/（screencaptureui正在存储文稿，已完成7）/截屏2020-06-17 下午12.36.52.png @ 2020-06-17 12:36:54
[[file:Screen-Pictures/%E9%A2%98%E7%9B%AE/2020-06-17_12-36-54_%E6%88%AA%E5%B1%8F2020-06-17%20%E4%B8%8B%E5%8D%8812.36.52.png]]

* 思路
[[https://leetcode-cn.com/problems/minimum-swaps-to-make-sequences-increasing/solution/leetcode-801-wo-gan-jio-ying-gai-jiang-de-hen-tou-/]]
* code
#+BEGIN_SRC python
class Solution:
    def minSwap(self, A: List[int], B: List[int]) -> int:
        swap, keep = [100 for i in range(len(A))], [100 for i in range(len(A))]
        swap[0], keep[0] = 1, 0
        for i in range(1, len(A)):
            if (A[i] > A[i-1] and B[i] > B[i-1]) and (A[i] > B[i-1] and B[i] > A[i-1]):
                # not change i
                keep[i] = min(keep[i-1], swap[i-1])
                # change i
                swap[i] = min(keep[i-1], swap[i-1]) + 1
            elif A[i] > A[i-1] and B[i] > B[i-1]:
                # not change i
                keep[i] = keep[i-1]
                # change i 
                swap[i] = swap[i-1] + 1
            else:
                # not change i
                keep[i] = swap[i-1]
                # change i
                swap[i] = keep[i-1] + 1
        # print(keep)
        # print(swap)
        return min(keep[len(A)-1], swap[len(A)-1])
#+END_SRC

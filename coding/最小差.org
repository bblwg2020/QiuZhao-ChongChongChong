* 题目

#+DOWNLOADED: file:/var/folders/wk/9k90t6fs7kx91_cn9v90hx_00000gn/T/TemporaryItems/（screencaptureui正在存储文稿，已完成79）/截屏2020-07-18 下午11.01.19.png @ 2020-07-18 23:01:23
[[file:Screen-Pictures/%E9%A2%98%E7%9B%AE/2020-07-18_23-01-23_%E6%88%AA%E5%B1%8F2020-07-18%20%E4%B8%8B%E5%8D%8811.01.19.png]]

* 思路
**** 分别排序，再针对a中的每个元素，对b进行二分查找，计算最小差(暴力搜索会超时)
**** 时间复杂度 O(nlogm)
* code
#+BEGIN_SRC python
class Solution:
    def smallestDifference(self, a: List[int], b: List[int]) -> int:
        res = 1e10
        a.sort()
        b.sort()

        n = len(b) 
        for i, num in enumerate(a):
            # idx = binarySearch(0, n - 1, min(num, res))
            left, right = 0, n - 1
            tmp = 1e10
            while left <= right:
                mid = left + (right - left) // 2
                if b[mid] == num:
                    return 0
                elif b[mid] > num:
                    # 最小差不一定刚好出现在最后 left==right 的条件中，所以需要额外做比较！
                    tmp = min(b[mid] - num, tmp)
                    right = mid - 1
                elif b[mid] < num:
                    tmp = min(num - b[mid], tmp)
                    left = mid + 1
            # print(num, tmp)
            res = min(res, tmp)
        return res
#+END_SRC

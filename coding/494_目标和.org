* 题目
#+DOWNLOADED: file:/var/folders/73/53s3wczx1l32608prn_fdgrm0000gn/T/TemporaryItems/（screencaptureui正在存储文稿，已完成13）/截屏2020-06-18 下午8.25.33.png @ 2020-06-18 20:25:36
[[file:Screen-Pictures/%E9%A2%98%E7%9B%AE/2020-06-18_20-25-36_%E6%88%AA%E5%B1%8F2020-06-18%20%E4%B8%8B%E5%8D%888.25.33.png]]

* 思路
  + 递归——从后往前
  + DP——从前往后
    #+DOWNLOADED: file:/var/folders/73/53s3wczx1l32608prn_fdgrm0000gn/T/TemporaryItems/（screencaptureui正在存储文稿，已完成14）/截屏2020-06-18 下午9.00.26.png @ 2020-06-18 21:00:29
    [[file:Screen-Pictures/%E6%80%9D%E8%B7%AF/2020-06-18_21-00-29_%E6%88%AA%E5%B1%8F2020-06-18%20%E4%B8%8B%E5%8D%889.00.26.png]]

#+DOWNLOADED: file:/var/folders/73/53s3wczx1l32608prn_fdgrm0000gn/T/TemporaryItems/（screencaptureui正在存储文稿，已完成15）/截屏2020-06-18 下午9.38.35.png @ 2020-06-18 21:38:42
[[file:Screen-Pictures/%E6%80%9D%E8%B7%AF/2020-06-18_21-38-42_%E6%88%AA%E5%B1%8F2020-06-18%20%E4%B8%8B%E5%8D%889.38.35.png]]

* code
#+BEGIN_SRC python
# 递归
class Solution:
    def findTargetSumWays(self, nums: List[int], S: int) -> int:
        return self.helper(nums, S)
        
    def helper(self, nums, S):
        if len(nums)==1 and nums[0]==S and nums[0]==-S:
            return 2
        elif len(nums)==1 and (nums[0]==S or nums[0]==-S):
            return 1
        elif len(nums)==1:
            return 0
        a, b = S - nums[-1], S + nums[-1]
        return self.helper(nums[:-1], a) + self.helper(nums[:-1], b)

# DP
class Solution:
    def findTargetSumWays(self, nums: List[int], S: int) -> int:
        s = sum(nums)
        l = len(nums)
        dp = [[0 for j in range(2*s + 1)] for i in range(l)]
        dp[0][nums[0]+s] = 1
        dp[0][-nums[0]+s] += 1
        for i in range(1, len(nums)):
            for j in range(-s, s+1):
                if dp[i-1][j + s] != 0:
                    dp[i][j + nums[i] + s] += dp[i-1][j + s]
                    dp[i][j - nums[i] + s] += dp[i-1][j + s]
        return 0 if S not in range(-s, s+1) else dp[l-1][S + s]
#+END_SRC
